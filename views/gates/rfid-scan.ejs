<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TerraConnection - RFID Scanner</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <link rel="stylesheet" href="/css/app.css">
  <style>
    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes pulse {
      0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(138, 43, 226, 0.7); }
      70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(138, 43, 226, 0); }
      100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(138, 43, 226, 0); }
    }

    @keyframes scanLine {
      0% { transform: translateY(-100%); }
      100% { transform: translateY(100%); }
    }

    body {
      margin: 0;
      padding: 0;
      min-height: 100vh;
      background: linear-gradient(-45deg, #6a0dad, #4b0082, #8a2be2, #9400d3);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .main-container {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      position: relative;
    }

    .main-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.3) 100%);
      pointer-events: none;
    }

    .scanner-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 2.5rem;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      max-width: 500px;
      width: 100%;
      text-align: center;
      animation: fadeInUp 0.8s ease-out;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .scanner-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    }

    .brand-header {
      margin-bottom: 2rem;
    }

    .brand-logo-image {
      max-width: 200px;
      max-height: 80px;
      width: auto;
      height: auto;
      margin-bottom: 1rem;
      filter: drop-shadow(0 4px 15px rgba(106, 13, 173, 0.2));
      transition: all 0.3s ease;
    }

    .brand-logo-image:hover {
      transform: scale(1.05);
      filter: drop-shadow(0 6px 20px rgba(106, 13, 173, 0.3));
    }

    .brand-subtitle {
      color: #6c757d;
      font-size: 1rem;
      margin-bottom: 0;
    }

    .scan-area {
      position: relative;
      background: #f8f9fa;
      border: 2px dashed #dee2e6;
      border-radius: 15px;
      padding: 2rem;
      margin: 2rem 0;
      transition: all 0.3s ease;
      overflow: hidden;
    }

    .scan-area.active {
      border-color: #8a2be2;
      background: rgba(138, 43, 226, 0.05);
      box-shadow: 0 0 20px rgba(138, 43, 226, 0.2);
    }

    .scan-area.scanning::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, transparent, #8a2be2, transparent);
      animation: scanLine 2s ease-in-out infinite;
    }

    .rfid-icon {
      font-size: 3rem;
      color: #6a0dad;
      margin-bottom: 1rem;
      display: block;
    }

    .scan-message {
      font-size: 1.25rem;
      color: #495057;
      font-weight: 500;
      margin-bottom: 0.5rem;
    }

    .scan-instruction {
      color: #6c757d;
      font-size: 0.9rem;
      margin-bottom: 1rem;
    }

    .status-badge {
      display: inline-flex;
      align-items: center;
      padding: 0.5rem 1rem;
      border-radius: 50px;
      font-size: 0.9rem;
      font-weight: 500;
      margin-top: 1rem;
      transition: all 0.3s ease;
    }

    .status-badge.ready {
      background: rgba(138, 43, 226, 0.1);
      color: #8a2be2;
      border: 1px solid rgba(138, 43, 226, 0.2);
    }

    .status-badge.processing {
      background: rgba(106, 13, 173, 0.1);
      color: #6a0dad;
      border: 1px solid rgba(106, 13, 173, 0.2);
    }

    .status-badge.error {
      background: rgba(220, 53, 69, 0.1);
      color: #dc3545;
      border: 1px solid rgba(220, 53, 69, 0.2);
    }

    .status-indicator {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      margin-right: 8px;
      background-color: currentColor;
    }

    .status-badge.ready .status-indicator {
      animation: pulse 2s infinite;
    }

    #rfidInput {
      position: absolute;
      opacity: 0;
      pointer-events: none;
    }

    /* Bootstrap Modals with TerraConnection Styling */
    #studentModal .modal-dialog {
      max-width: 720px;
      width: 90vw;
    }

    @media (min-width: 1200px) {
      #studentModal .modal-dialog {
        max-width: 840px;
      }
    }

    .modal-content {
      border: none;
      border-radius: 20px;
      backdrop-filter: blur(10px);
      background: rgba(255, 255, 255, 0.95);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
      border-bottom: 1px solid rgba(0, 0, 0, 0.1);
      background: linear-gradient(135deg, #6a0dad, #8a2be2);
      color: white;
      border-radius: 20px 20px 0 0;
    }

    .modal-header .btn-close {
      filter: invert(1);
    }

    .modal-body {
      padding: 3rem 2.5rem;
      text-align: center;
    }

    .student-avatar {
      width: 240px;
      height: 240px;
      border-radius: 50%;
      object-fit: cover;
      border: 4px solid #fff;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
      margin-bottom: 1.5rem;
    }

    .student-name {
      font-size: 2.2rem;
      font-weight: 700;
      color: #2c3e50;
      margin-bottom: 0.5rem;
    }

    .student-id {
      color: #6c757d;
      font-size: 1.25rem;
      margin-bottom: 1.5rem;
    }

    @media (max-width: 576px) {
      #studentModal .modal-dialog {
        max-width: 95vw;
      }

      .modal-body {
        padding: 2rem;
      }

      .student-avatar {
        width: 180px;
        height: 180px;
      }

      .student-name {
        font-size: 1.8rem;
      }

      .student-id {
        font-size: 1.1rem;
      }
    }

    .event-badge {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      border-radius: 50px;
      font-size: 1rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      margin-top: 1rem;
    }

    .event-badge.entry {
      background: linear-gradient(135deg, #28a745, #20c997);
      color: white;
      box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
    }

    .event-badge.exit {
      background: linear-gradient(135deg, #dc3545, #fd7e14);
      color: white;
      box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
    }

    /* Alert Styling */
    .alert {
      border: none;
      border-radius: 12px;
      margin: 1rem 0;
      backdrop-filter: blur(10px);
    }

    .alert-success {
      background: rgba(40, 167, 69, 0.1);
      color: #28a745;
      border: 1px solid rgba(40, 167, 69, 0.2);
    }

    .alert-danger {
      background: rgba(220, 53, 69, 0.1);
      color: #dc3545;
      border: 1px solid rgba(220, 53, 69, 0.2);
    }

    .alert-info {
      background: rgba(106, 13, 173, 0.1);
      color: #6a0dad;
      border: 1px solid rgba(106, 13, 173, 0.2);
    }

  </style>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
  <div class="main-container">
    <div class="scanner-card">
      <div class="brand-header">
        <img src="/logo.png" alt="TerraConnection" class="brand-logo-image">
        <p class="brand-subtitle">RFID Access Control System</p>
      </div>

      <div class="scan-area" id="scanArea">
        <i class="fas fa-credit-card rfid-icon"></i>
        <div class="scan-message">Ready to Scan</div>
        <div class="scan-instruction">Present your RFID card to the scanner</div>
        <input type="text" id="rfidInput" placeholder="Scan RFID card here" autofocus>
      </div>

      <div class="status-badge ready" id="statusBadge">
        <div class="status-indicator"></div>
        <span id="statusText">Scanner Ready</span>
      </div>
    </div>
  </div>

  <!-- Student Information Modal -->
  <div class="modal fade" id="studentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">
            <i class="fas fa-user me-2"></i>
            Access Granted
          </h5>
        </div>
        <div class="modal-body" id="studentInfo">
          <!-- Student info will be populated here -->
        </div>
      </div>
    </div>
  </div>

  <!-- Alert Container -->
  <div class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
    <div id="alertContainer"></div>
  </div>

  
  <script>
    $(document).ready(function() {
      const $rfidInput = $('#rfidInput');
      const $scanArea = $('#scanArea');
      const $statusBadge = $('#statusBadge');
      const $statusText = $('#statusText');
      const $alertContainer = $('#alertContainer');
      const studentModalElement = document.getElementById('studentModal');
      const studentModal = studentModalElement ? new bootstrap.Modal(studentModalElement, {
        backdrop: 'static',
        keyboard: false
      }) : null;

      let scanning = false;
      let debounceTimer = null;

      function setBadgeState(state) {
        $statusBadge.removeClass('ready processing error');
        if (state) {
          $statusBadge.addClass(state);
        }
      }

      function updateStatus(message, state = 'ready') {
        $statusText.text(message);
        setBadgeState(state);
      }

      function showAlert(message, type = 'danger', duration = 5000) {
        const id = `alert-${Date.now()}`;
        const icon = type === 'success' ? 'check-circle' : type === 'info' ? 'info-circle' : 'exclamation-triangle';
        const markup = `
          <div class="alert alert-${type} alert-dismissible fade show" role="alert" id="${id}">
            <i class="fas fa-${icon} me-2"></i>${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `;
        $alertContainer.append(markup);
        setTimeout(() => $(`#${id}`).alert('close'), duration);
      }

      function resetScanner() {
        scanning = false;
        $scanArea.removeClass('scanning');
        updateStatus('Scanner Ready');
        $rfidInput.val('').focus();
        if (studentModalElement) {
          const modalTitle = studentModalElement.querySelector('.modal-title');
          if (modalTitle) {
            modalTitle.innerHTML = '<i class="fas fa-user me-2"></i>Access Granted';
          }
        }
      }

      function finalizeModal(delay = 4000) {
        setTimeout(() => {
          if (studentModal) {
            studentModal.hide();
          }
          setTimeout(resetScanner, 500);
        }, delay);
      }

      function handleSuccess(response) {
        if (!response || !response.user) {
          showAlert('Student information not found', 'danger');
          resetScanner();
          return;
        }

        const user = response.user;
        const eventType = (response.event || 'entry').toLowerCase();
        const icon = eventType === 'exit' ? 'sign-out-alt' : 'sign-in-alt';
        const title = eventType === 'exit' ? 'Exit Recorded' : 'Entry Recorded';

        $('#studentInfo').html(`
          <img src="${user.profile_picture || '/images/default-avatar.png'}" alt="${user.first_name}'s photo"
               class="student-avatar" onerror="this.src='/images/default-avatar.png'">
          <h3 class="student-name">${user.first_name} ${user.last_name}</h3>
          <p class="student-id">ID: ${user.school_id}</p>
          <div class="event-badge ${eventType}">
            <i class="fas fa-${icon} me-2"></i>${response.event || 'Entry'}
          </div>
        `);

        if (studentModal) {
          const modalTitle = studentModalElement.querySelector('.modal-title');
          if (modalTitle) {
            modalTitle.innerHTML = `<i class="fas fa-user-check me-2"></i>${title}`;
          }
          studentModal.show();
        }

        updateStatus(eventType === 'exit' ? 'Exit recorded successfully' : 'Entry recorded successfully', 'ready');
        finalizeModal();
      }

      function processScan(uid) {
        if (!uid) {
          return;
        }

        scanning = true;
        updateStatus('Processing scan...', 'processing');
        $scanArea.addClass('scanning');

        $.ajax({
          url: '/api/rfid/scan',
          method: 'POST',
          contentType: 'application/json',
          data: JSON.stringify({ card_uid: uid }),
          success: handleSuccess,
          error: function(err) {
            let message = 'Error processing scan. Please try again.';
            if (err && err.responseJSON) {
              message = err.responseJSON.message || err.responseJSON.error || message;
            }
            showAlert(message, 'danger');
            updateStatus('Scan failed', 'error');
            setTimeout(resetScanner, 1500);
          },
          complete: function() {
            $scanArea.removeClass('scanning');
            scanning = false;
            setTimeout(() => {
              if (document.activeElement !== $rfidInput[0]) {
                $rfidInput.focus();
              }
            }, 100);
          }
        });
      }

      $rfidInput.on('focus', function() {
        $scanArea.addClass('active');
      }).on('blur', function() {
        $scanArea.removeClass('active');
      });

      $rfidInput.on('input', function() {
        if (scanning) {
          return;
        }
        const value = $(this).val().trim();
        clearTimeout(debounceTimer);

        if (!value) {
          return;
        }

        debounceTimer = setTimeout(() => {
          processScan(value);
          $(this).val('');
        }, 150);
      });

      $(document).on('click', function() {
        if (document.activeElement !== $rfidInput[0]) {
          $rfidInput.focus();
        }
      });

      $(window).on('focus', () => {
        updateStatus('Scanner Ready');
        $rfidInput.focus();
      }).on('blur', () => {
        updateStatus('Scanner Inactive', 'ready');
      });

      updateStatus('Scanner Ready');
      $rfidInput.focus();
    });
  </script>
</body>
</html>
