<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TerraConnection - Admin Login</title>
  <link rel="stylesheet" href="/css/app.css">
  <style>
    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes float {
      0% { transform: translateY(0px); }
      50% { transform: translateY(-10px); }
      100% { transform: translateY(0px); }
    }

    @keyframes underlineExpand {
      from { width: 0; }
      to { width: 60px; }
    }

    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      color: #333;
      overflow-x: hidden;
    }

    .main {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background: linear-gradient(-45deg, #6a0dad, #4b0082, #8a2be2, #9400d3);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      position: relative;
    }

    .main::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.3) 100%);
      pointer-events: none;
    }

    .logo-container {
      text-align: center;
      margin-bottom: 1rem;
      animation: float 6s ease-in-out infinite;
    }

    .container {
      text-align: center;
      background-color: rgba(255, 255, 255, 0.95);
      padding: 2.5rem;
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(10px);
      color: #333;
      max-width: 400px;
      width: 100%;
      animation: fadeInUp 0.8s ease-out;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .container:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    }

    .heading-container {
      position: relative;
      display: inline-block;
      margin-bottom: 1.5rem;
    }

    h1 {
      font-size: 2rem;
      color: #4b0082;
      animation: fadeInUp 0.8s ease-out 0.2s both;
      margin: 0;
    }

    .heading-underline {
      position: absolute;
      bottom: -8px;
      left: 50%;
      transform: translateX(-50%);
      height: 3px;
      background: linear-gradient(90deg, #8a2be2, #6a0dad);
      animation: underlineExpand 0.8s ease-out 1s forwards;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
    }

    form > div {
      animation: fadeInUp 0.8s ease-out;
      animation-fill-mode: both;
    }

    form > div:nth-child(1) { animation-delay: 0.4s; }
    form > div:nth-child(2) { animation-delay: 0.6s; }
    form > div:nth-child(3) { animation-delay: 0.8s; }

    label {
      display: block;
      text-align: left;
      font-size: 0.875rem;
      margin-bottom: 0.5rem;
      font-weight: bold;
      color: #4b0082;
    }

    .input-group {
      position: relative;
      width: 100%;
    }

    .with-icon {
      padding-left: 40px;
      padding-right: 40px;
      background-repeat: no-repeat;
      background-position: 10px center;
      background-size: 20px 20px;
      transition: all 0.3s ease;
    }

    .email-icon {
      background-image: url('/profile.png');
    }

    .password-icon {
      background-image: url('/lock.png');
    }

    input {
      padding: 0.75rem;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      font-size: 1rem;
      width: 80%;
      transition: all 0.3s ease;
    }

    input:focus {
      outline: none;
      border-color: #8a2be2;
      box-shadow: 0 0 0 3px rgba(138, 43, 226, 0.2);
    }

    input.error {
      border-color: #ff4444;
    }

    .error-message {
      color: #ff4444;
      font-size: 0.8rem;
      margin-top: 0.5rem;
      text-align: left;
      display: none;
      animation: fadeInUp 0.3s ease-out;
    }

    .error-message.visible {
      display: block;
    }

    .password-toggle {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      background: none;
      border: none;
      cursor: pointer;
      padding: 5px;
      color: #666;
      transition: color 0.3s ease;
    }

    .password-toggle:hover {
      color: #4b0082;
    }

    button[type="submit"] {
      padding: 0.875rem;
      border: none;
      border-radius: 8px;
      background: linear-gradient(135deg, #8a2be2, #6a0dad);
      color: white;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      width: 100%;
      font-weight: bold;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    button[type="submit"]:hover {
      background: linear-gradient(135deg, #6a0dad, #4b0082);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(106, 13, 173, 0.3);
    }

    button[type="submit"]:active {
      transform: translateY(0);
    }

    @media (max-width: 600px) {
      .container {
        padding: 1.5rem;
        margin: 1rem;
      }
      h1 {
        font-size: 1.5rem;
      }
      form {
        gap: 1rem;
      }
      input, button {
        font-size: 0.875rem;
      }
    }
  </style>
</head>
<body>
  <main class="main">
    <div class="logo-container">
      <img src="/logo.png" alt="RFID Attendance System Logo" style="max-width: 225px;">
    </div>
    <div class="container">
      <div class="heading-container">
        <h1>Sign in</h1>
        <div class="heading-underline"></div>
      </div>

      <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-danger" style="color: red; margin-bottom: 1rem;">
          <%= error %>
        </div>
      <% } %>
      
      <form action="/admin/login" method="POST" id="loginForm" novalidate>
        <div>
          <label for="email">Email</label>
          <div class="input-group">
            <input type="email" id="email" name="email" placeholder="Enter email" class="with-icon email-icon">
            <div class="error-message" id="emailError">Please enter an email</div>
          </div>
        </div>
        <div>
          <label for="password">Password</label>
          <div class="input-group">
            <input type="password" id="password" name="password" placeholder="Enter password" class="with-icon password-icon">
            <button type="button" class="password-toggle" onclick="togglePassword()">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                <circle cx="12" cy="12" r="3"></circle>
              </svg>
            </button>
            <div class="error-message" id="passwordError">Please enter a password</div>
          </div>
        </div>
        <div>
          <button type="submit">Login</button>
        </div>
      </form>
    </div>
  </main>

  <script>
    function togglePassword() {
      const passwordInput = document.getElementById('password');
      const toggleButton = document.querySelector('.password-toggle svg');
      
      if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        toggleButton.innerHTML = `
          <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path>
          <line x1="1" y1="1" x2="23" y2="23"></line>
        `;
      } else {
        passwordInput.type = 'password';
        toggleButton.innerHTML = `
          <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
          <circle cx="12" cy="12" r="3"></circle>
        `;
      }
    }

    document.getElementById('loginForm').addEventListener('submit', function(e) {
      e.preventDefault();
      let isValid = true;
      
      // Email validation
      const email = document.getElementById('email');
      const emailError = document.getElementById('emailError');
      if (!email.value.trim()) {
        email.classList.add('error');
        emailError.classList.add('visible');
        isValid = false;
      } else {
        email.classList.remove('error');
        emailError.classList.remove('visible');
      }

      // Password validation
      const password = document.getElementById('password');
      const passwordError = document.getElementById('passwordError');
      if (!password.value.trim()) {
        password.classList.add('error');
        passwordError.classList.add('visible');
        isValid = false;
      } else {
        password.classList.remove('error');
        passwordError.classList.remove('visible');
      }

      // If form is valid, submit it
      if (isValid) {
        this.submit();
      }
    });

    // Remove error styling on input
    const inputs = document.querySelectorAll('input');
    inputs.forEach(input => {
      input.addEventListener('input', function() {
        this.classList.remove('error');
        const errorMessage = this.parentElement.querySelector('.error-message');
        if (errorMessage) {
          errorMessage.classList.remove('visible');
        }
      });
    });
  </script>
</body>
</html>