<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TerraConnection - Admin Panel</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <link rel="stylesheet" href="/css/app.css">
  <link rel="stylesheet" href="/css/profile-pictures.css">
  <style>
    /* Modal specific styles */
    .modal-dialog.modal-lg {
      max-width: 800px;
    }
    
    .modal-body {
      padding: 1.5rem;
    }
    
    .modal-content {
      border-radius: 0.5rem;
    }
    
    .modal-header {
      background-color: #f8f9fa;
      border-bottom: 1px solid #dee2e6;
      border-top-left-radius: 0.5rem;
      border-top-right-radius: 0.5rem;
    }
    
    /* Modal CSS moved to app.css for better priority */
    
    /* Fix form styling inside modal */
    .modal-body .form-group {
      margin-bottom: 1rem;
    }
    
    .modal-body label {
      font-weight: 500;
      margin-bottom: 0.5rem;
    }
    
    .modal-body .form-control {
      border-radius: 0.25rem;
    }
    
    /* Table styling inside modal */
    .modal-body .table {
      margin-bottom: 0;
    }
    
    /* Loading spinner */
    .modal-loading {
      padding: 2rem;
      text-align: center;
    }
    
    .modal-loading .spinner-border {
      width: 3rem;
      height: 3rem;
    }

    /* Breadcrumb styles */
    .breadcrumb-container {
      background: var(--bs-body-bg);
      backdrop-filter: blur(10px);
      border-bottom: 1px solid var(--bs-border-color);
      padding: 0.75rem 0;
      margin-bottom: 1rem;
    }

    .breadcrumb {
      margin: 0;
      padding: 0;
      background: transparent;
    }

    .breadcrumb-item + .breadcrumb-item::before {
      content: "â€º";
      color: var(--bs-secondary);
      font-weight: bold;
    }

    .breadcrumb-item.active {
      color: var(--bs-primary);
      font-weight: 500;
    }

    /* Toast notifications */
    .toast-container {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 10100;
    }

    .toast {
      min-width: 300px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

         /* Theme toggle */
     .theme-toggle {
       background: none;
       border: none;
       color: var(--text-light);
       padding: 0.5rem;
       border-radius: 0.375rem;
       transition: all 0.2s ease;
     }
 
     .theme-toggle:hover {
       background-color: rgba(255, 255, 255, 0.1);
       color: var(--text-light);
     }

    /* User dropdown */
    .user-dropdown .dropdown-toggle::after {
      display: none;
    }

    .user-avatar {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      background: var(--bs-primary);
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 500;
      font-size: 0.875rem;
    }

         /* Responsive sidebar */
     @media (max-width: 768px) {
       .admin-sidebar {
         transform: translateX(-100%);
         transition: transform 0.3s ease-in-out;
         width: 250px;
       }
 
       .admin-sidebar.show {
         transform: translateX(0);
       }
 
       .admin-content {
         margin-left: 0 !important;
       }
     }

         /* Desktop sidebar collapse */
     .admin-sidebar.collapsed {
       width: 60px;
     }
 
     .admin-sidebar.collapsed .sidebar-header h6 {
       display: none;
     }
 
     .admin-sidebar.collapsed .nav-link {
       text-align: center;
       padding: 12px 10px;
     }
 
     .admin-sidebar.collapsed .nav-link span,
     .admin-sidebar.collapsed .nav-link .nav-text {
       display: none;
     }
 
     .admin-sidebar.collapsed .nav-link i {
       margin-right: 0;
       font-size: 1.2rem;
     }
 
     .admin-content.sidebar-collapsed {
       margin-left: 60px;
     }

    /* Loading states */
    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--bs-body-bg);
      opacity: 0.9;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9000;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .loading-overlay.show {
      opacity: 1;
      visibility: visible;
    }

    /* Page transitions */
    .page-transition {
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.3s ease;
    }

    .page-transition.loaded {
      opacity: 1;
      transform: translateY(0);
    }
  </style>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/script.js"></script>
  <script>
    window.serverToasts = <%- JSON.stringify(toasts || []) %>;
  </script>
</head>
<body class="admin-panel">
  <!-- Loading Overlay -->
  <div class="loading-overlay" id="loadingOverlay">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
  </div>

  <!-- Toast Container -->
  <div class="toast-container" id="toastContainer"></div>

  <div class="dashboard">
    <%- include('partials/header.ejs') %>
    
    <!-- Breadcrumb Navigation -->
    <div class="breadcrumb-container">
      <div class="container-fluid">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb" id="breadcrumbNav">
            <li class="breadcrumb-item">
              <a href="/admin/dashboard" class="text-decoration-none">
                <i class="fas fa-home"></i> Dashboard
              </a>
            </li>
          </ol>
        </nav>
      </div>
    </div>
    
    <div class="admin-body-container">
      <div class="admin-sidebar" id="adminSidebar">
        <div class="sidebar-header d-flex align-items-center justify-content-between p-3">
          <h6 class="mb-0 text-white">Navigation</h6>
          <button class="btn-close btn-close-white d-md-none" id="sidebarClose"></button>
        </div>
                 <ul class="nav flex-column">
           <li class="nav-item">
             <a class="nav-link" href="/admin/dashboard" data-page="dashboard">
               <i class="fa-solid fa-home"></i> <span class="nav-text">Dashboard</span>
             </a>
           </li>
           <li class="nav-item">
             <a class="nav-link" href="/admin/users" data-page="users">
               <i class="fa-solid fa-users"></i> <span class="nav-text">Manage Users</span>
             </a>
           </li>
           <li class="nav-item">
             <a class="nav-link" href="/admin/departments" data-page="departments">
               <i class="fa-solid fa-building"></i> <span class="nav-text">Manage Departments</span>
             </a>
           </li>
           <li class="nav-item">
             <a class="nav-link" href="/admin/classes" data-page="classes">
               <i class="fa-solid fa-chalkboard"></i> <span class="nav-text">Manage Classes</span>
             </a>
           </li>
           <li class="nav-item">
             <a class="nav-link" href="/admin/rfid-cards" data-page="rfid-cards">
               <i class="fa-solid fa-id-card"></i> <span class="nav-text">Manage RFID Cards</span>
             </a>
           </li>
                     <li class="nav-item">
            <a class="nav-link" href="/admin/visitors" data-page="visitors">
              <i class="fa-solid fa-user-clock"></i> <span class="nav-text">Visitor Logs</span>
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/audit-logs" data-page="audit-logs">
              <i class="fa-solid fa-clipboard-list"></i> <span class="nav-text">Audit Logs</span>
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/security/ip-restrictions" data-page="security-ip-restrictions">
              <i class="fa-solid fa-shield-halved"></i> <span class="nav-text">IP Restrictions</span>
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/admin/guardian-link" data-page="guardian-link">
              <i class="fa-solid fa-link"></i> <span class="nav-text">Guardian Link</span>
            </a>
          </li>
           <li class="nav-item mt-auto">
             <a class="nav-link" href="/admin/logout">
               <i class="fa-solid fa-sign-out-alt"></i> <span class="nav-text">Logout</span>
             </a>
           </li>
         </ul>
      </div>
      
      <div class="admin-content page-transition" id="adminContent">
        <%- body %>
      </div>
    </div>
    
    <%- include('partials/footer.ejs') %>
  </div>

  <div class="modal fade" id="appModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title"></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="modal-loading">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    $(document).ready(function() {
      // Initialize components
      initializeBreadcrumbs();
      initializeSidebar();
      initializeThemeToggle();
      initializeToastSystem();
      initializePageTransitions();

      if (Array.isArray(window.serverToasts) && window.serverToasts.length > 0) {
        window.serverToasts.forEach(function(toast) {
          const title = toast.title || 'Notification';
          const message = toast.message || '';
          const type = toast.type || 'info';
          showToast(title, message, type);
        });
        window.serverToasts = [];
      }
      
      const modal = $('#appModal');
      const bsModal = new bootstrap.Modal(modal[0]);
      
      modal.on('hidden.bs.modal', function() {
        modal.find('form').off('submit');
        modal.find('.modal-body').html('<div class="modal-loading"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');
        modal.find('.modal-title').empty();
      });

      $(document).on('click', '[data-modal="true"]', function(e) {
        e.preventDefault();
        const url = $(this).attr('href');
        const linkText = $(this).text().trim();
        
        modal.find('.modal-title').text('Loading...');
        bsModal.show();
        
        $.ajax({
          url: url,
          headers: {
            'X-Requested-With': 'XMLHttpRequest'
          },
          success: function(response) {
            const cleanResponse = response.trim();
            modal.find('.modal-body').html(cleanResponse);
            
            const title = $(cleanResponse).find('h2').first().text().trim() || linkText;
            modal.find('.modal-title').text(title);
            
            modal.find('form').on('submit', function(e) {
              const form = $(this);
              
              // Don't intercept forms with target="_blank" (for file downloads)
              if (form.attr('target') === '_blank') {
                return; // Let the form submit naturally
              }
              
              e.preventDefault();
              const submitBtn = form.find('button[type="submit"]');
              const originalText = submitBtn.text();
              
              submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...');
              
              // Use FormData for proper file upload support
              const formData = new FormData(form[0]);
              
              $.ajax({
                url: form.attr('action'),
                method: form.attr('method') || 'POST',
                data: formData,
                processData: false,  // Don't process the data
                contentType: false,  // Don't set content type (let browser set multipart/form-data)
                headers: {
                  'X-Requested-With': 'XMLHttpRequest'
                },
                success: function(response) {
                  bsModal.hide();
                  showToast('Success!', 'Operation completed successfully.', 'success');
                  setTimeout(() => window.location.reload(), 1000);
                },
                error: function(xhr) {
                  submitBtn.prop('disabled', false).text(originalText);
                  
                  const errorMsg = xhr.responseText || 'An error occurred. Please try again.';
                  showToast('Error', errorMsg, 'error');
                  
                  const alertHtml = '<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
                    errorMsg +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                    '</div>';

                  form.find('.alert').remove();
                  form.prepend(alertHtml);
                }
              });
            });
          },
          error: function(xhr) {
            modal.find('.modal-body').html('<div class="alert alert-danger">Error loading content. Please try again.</div>');
            modal.find('.modal-title').text('Error');
            showToast('Error', 'Failed to load content.', 'error');
          }
        });
      });

      // Breadcrumb initialization
      function initializeBreadcrumbs() {
        const currentPath = window.location.pathname;
        const pathSegments = currentPath.split('/').filter(segment => segment);
        
        let breadcrumbHtml = '<li class="breadcrumb-item"><a href="/admin/dashboard" class="text-decoration-none"><i class="fas fa-home"></i> Dashboard</a></li>';
        
        if (pathSegments.length > 1) {
          const pageName = pathSegments[pathSegments.length - 1];
          const pageTitle = getPageTitle(pageName);
          breadcrumbHtml += `<li class="breadcrumb-item active" aria-current="page">${pageTitle}</li>`;
        }
        
        $('#breadcrumbNav').html(breadcrumbHtml);
      }

      function getPageTitle(pageName) {
        const titles = {
          'users': 'Users',
          'departments': 'Departments',
          'classes': 'Classes',
          'rfid-cards': 'RFID Cards',
          'audit-logs': 'Audit Logs',
          'security': 'Security Settings',
          'ip-restrictions': 'IP Restrictions',
          'guardian-link': 'Guardian Link',
          'create': 'Create',
          'edit': 'Edit',
          'show': 'Details'
        };
        return titles[pageName] || pageName.charAt(0).toUpperCase() + pageName.slice(1);
      }

      // Sidebar initialization
      function initializeSidebar() {
        // Set active page
        const currentPath = window.location.pathname;
        $('.nav-link').removeClass('active');
        $(`.nav-link[href="${currentPath}"]`).addClass('active');
        
        // Sidebar toggle for both desktop and mobile
        $('#sidebarToggle').on('click', function() {
          if ($(window).width() <= 768) {
            // Mobile: toggle sidebar visibility
            $('#adminSidebar').toggleClass('show');
          } else {
            // Desktop: toggle sidebar collapsed state
            $('#adminSidebar').toggleClass('collapsed');
            $('.admin-content').toggleClass('sidebar-collapsed');
          }
        });
        
        $('#sidebarClose').on('click', function() {
          $('#adminSidebar').removeClass('show');
        });
        
        // Close sidebar when clicking outside on mobile
        $(document).on('click', function(e) {
          if ($(window).width() <= 768) {
            if (!$(e.target).closest('.admin-sidebar, #sidebarToggle').length) {
              $('#adminSidebar').removeClass('show');
            }
          }
        });
      }

      // Theme toggle initialization
      function initializeThemeToggle() {
        const savedTheme = localStorage.getItem('theme') || 'light';
        $('html').attr('data-bs-theme', savedTheme);
        
        $('.theme-toggle').on('click', function() {
          const currentTheme = $('html').attr('data-bs-theme');
          const newTheme = currentTheme === 'light' ? 'dark' : 'light';
          
          $('html').attr('data-bs-theme', newTheme);
          localStorage.setItem('theme', newTheme);
          
          // Trigger theme change event
          $(document).trigger('themeChanged');
          
          showToast('Theme Changed', `Switched to ${newTheme} theme.`, 'info');
        });
      }

      // Toast notification system
      function initializeToastSystem() {
        window.showToast = function(title, message, type = 'info') {
          const toastId = 'toast-' + Date.now();
          const iconClass = {
            'success': 'fas fa-check-circle text-success',
            'error': 'fas fa-exclamation-circle text-danger',
            'warning': 'fas fa-exclamation-triangle text-warning',
            'info': 'fas fa-info-circle text-info'
          }[type] || 'fas fa-info-circle text-info';
          
          const toastHtml = `
            <div class="toast" id="${toastId}" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="toast-header">
                <i class="${iconClass} me-2"></i>
                <strong class="me-auto">${title}</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>
              <div class="toast-body">
                ${message}
              </div>
            </div>
          `;
          
          $('#toastContainer').append(toastHtml);
          const toast = new bootstrap.Toast(document.getElementById(toastId));
          toast.show();
          
          // Auto remove after 5 seconds
          setTimeout(() => {
            $(`#${toastId}`).remove();
          }, 5000);
        };
      }

      // Page transitions
      function initializePageTransitions() {
        $('#adminContent').addClass('loaded');
        
        // Show loading on navigation
        $('.nav-link').on('click', function() {
          if (!$(this).hasClass('active')) {
            $('#loadingOverlay').addClass('show');
          }
        });
      }
    });
  </script>

  <!-- Socket.IO Client for Real-time Updates -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    // Initialize Socket.IO connection for admin dashboard
    window.socket = io();
    
    // Auto-join dashboard if we're on the dashboard page
    if (window.location.pathname === '/admin/dashboard') {
      const adminData = {
        role: 'admin',
        email: '<%= typeof admin !== "undefined" ? admin.email : "" %>'
      };
      window.socket.emit('joinDashboard', adminData);
    }
    
    // Handle connection events
    window.socket.on('connect', () => {
      console.log('Connected to server via Socket.IO');
    });
    
    window.socket.on('disconnect', () => {
      console.log('Disconnected from server');
    });
  </script>
</body>
</html>
