<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Visitor Registration - TerraConnection</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            margin: 0;
            padding: 0;
            min-height: 100vh;
            background: linear-gradient(135deg, #6a0dad, #4b0082, #8a2be2, #9400d3);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #1f1f1f;
        }

        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .kiosk-container {
            max-width: 900px;
            margin: 0 auto;
            padding: 30px 20px;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .kiosk-card {
            background: rgba(255, 255, 255, 0.96);
            border-radius: 24px;
            box-shadow: 0 18px 45px rgba(0, 0, 0, 0.18);
            overflow: hidden;
            width: 100%;
        }

        .kiosk-header {
            background: linear-gradient(135deg, #6a0dad, #8a2be2);
            color: #fff;
            padding: 40px 35px;
            text-align: center;
        }

        .kiosk-header h1 {
            font-weight: 700;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .kiosk-header p {
            font-size: 1.05rem;
            opacity: 0.9;
            margin-bottom: 0;
        }

        .kiosk-body {
            padding: 40px 35px 20px;
        }

        .form-label {
            font-weight: 600;
            color: #6a0dad;
        }

        .form-control, .form-control:focus {
            border-radius: 14px;
            border: 2px solid rgba(138, 43, 226, 0.25);
            box-shadow: none;
        }

        .form-control:focus {
            border-color: rgba(106, 13, 173, 0.6);
        }

        .scan-status {
            transition: all 0.3s ease;
        }

        .form-footer {
            padding: 25px 35px 35px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 15px;
            border-top: 1px solid rgba(106, 13, 173, 0.1);
            background: rgba(250, 248, 255, 0.8);
        }

        .btn-kiosk {
            border-radius: 14px;
            padding: 12px 22px;
            font-weight: 600;
        }

        .spinner-border {
            width: 2.5rem;
            height: 2.5rem;
        }

        @media (max-width: 768px) {
            .kiosk-body {
                padding: 30px 20px;
            }

            .form-footer {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
</head>
<body>
    <div class="kiosk-container">
        <div class="kiosk-card">
            <div class="kiosk-header">
                <h1><i class="fas fa-id-card-clip me-2"></i>Visitor Registration</h1>
                <p>Fill out the form, then scan the visitor pass to receive access.</p>
            </div>
            <div class="kiosk-body">
                <div id="statusMessage"></div>
                <form id="visitorForm" autocomplete="off" spellcheck="false">
                    <div class="mb-4">
                        <label for="name" class="form-label">Full Name</label>
                        <input type="text" id="name" class="form-control form-control-lg" placeholder="Enter your full name" maxlength="100" required>
                    </div>
                    <div class="mb-4">
                        <label for="purpose" class="form-label">Purpose of Visit</label>
                        <select id="purpose" class="form-select form-select-lg" required>
                            <option value="" selected disabled>Select purpose</option>
                            <option value="Finance">Finance</option>
                            <option value="Admission/Enrollment">Admission/Enrollment</option>
                            <option value="Seminar/Workshop/Conference">Seminar/Workshop/Conference</option>
                            <option value="Guest Lecture">Guest Lecture</option>
                            <option value="Research Collaboration / Data Gathering">Research Collaboration / Data Gathering</option>
                            <option value="Campus Tour">Campus Tour</option>
                            <option value="Visiting a Student / Relative">Visiting a Student / Relative</option>
                            <option value="Alumni Visit">Alumni Visit</option>
                            <option value="Dropping Off or Picking Up Items">Dropping Off or Picking Up Items</option>
                        </select>
                    </div>
                    <div class="mb-4">
                        <label for="rfidCardUid" class="form-label">Visitor Pass (RFID)</label>
                        <div class="d-flex gap-2 align-items-center">
                            <input type="text" id="rfidCardUid" class="form-control form-control-lg" placeholder="Focus here, then scan the visitor pass" autocomplete="off" required>
                            <button type="button" class="btn btn-outline-secondary btn-kiosk" id="clearPassBtn">
                                <i class="fas fa-eraser"></i>
                            </button>
                        </div>
                        <div class="form-text mt-2">
                            Tap or scan the RFID visitor pass while this field is selected. Most scanners submit automatically.
                        </div>
                        <div id="scanStatus" class="scan-status small text-muted mt-2"></div>
                    </div>
                    <div class="alert alert-info d-flex align-items-center">
                        <i class="fas fa-info-circle me-2"></i>
                        <span>Keep the visitor pass with you. You'll need to scan it again when exiting.</span>
                    </div>
                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-outline-secondary btn-kiosk" onclick="window.location.href='/kiosk/'">
                            <i class="fas fa-arrow-left"></i> Main Menu
                        </button>
                        <button type="submit" class="btn btn-primary btn-kiosk flex-grow-1" id="submitBtn">
                            <i class="fas fa-check-circle"></i> Complete Registration
                        </button>
                    </div>
                </form>
            </div>
            <div class="form-footer">
                <div class="d-flex align-items-center gap-2">
                    <div id="loadingSpinner" class="spinner-border text-primary" role="status" style="display: none;">
                        <span class="visually-hidden">Processing...</span>
                    </div>
                    <span class="text-muted small">Need help? Please ask our staff for assistance.</span>
                </div>
                <a href="/kiosk/exit" class="btn btn-outline-warning btn-kiosk">
                    <i class="fas fa-door-open"></i> Go to Exit Kiosk
                </a>
            </div>
        </div>
    </div>

    <script>
        class VisitorRegistration {
            constructor() {
                this.form = document.getElementById('visitorForm');
                this.nameInput = document.getElementById('name');
                this.purposeInput = document.getElementById('purpose');
                this.passInput = document.getElementById('rfidCardUid');
                this.clearPassBtn = document.getElementById('clearPassBtn');
                this.scanStatus = document.getElementById('scanStatus');
                this.statusMessage = document.getElementById('statusMessage');
                this.loadingSpinner = document.getElementById('loadingSpinner');
                this.submitBtn = document.getElementById('submitBtn');

                this.attachEvents();
                this.nameInput.focus();
            }

            attachEvents() {
                this.form.addEventListener('submit', (event) => {
                    event.preventDefault();
                    this.registerVisitor();
                });

                this.clearPassBtn.addEventListener('click', () => {
                    this.passInput.value = '';
                    this.passInput.classList.remove('is-valid', 'is-invalid');
                    this.updateScanStatus('');
                    this.passInput.focus();
                });

                this.passInput.addEventListener('keydown', (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        this.confirmScan();
                    }
                });

                this.passInput.addEventListener('input', () => {
                    this.passInput.classList.remove('is-valid', 'is-invalid');
                    this.updateScanStatus('');
                });
            }

            confirmScan() {
                const value = this.passInput.value.trim();

                if (!value) {
                    this.showStatus('Visitor pass not detected. Please scan the pass again.', 'error');
                    this.passInput.classList.add('is-invalid');
                    return;
                }

                this.passInput.classList.add('is-valid');
                this.updateScanStatus(`Pass detected: <strong>${value}</strong>`);
            }

            updateScanStatus(message) {
                if (!message) {
                    this.scanStatus.innerHTML = '';
                    this.scanStatus.className = 'scan-status small text-muted mt-2';
                    return;
                }

                this.scanStatus.innerHTML = `<i class="fas fa-id-card text-success me-1"></i> ${message}`;
                this.scanStatus.className = 'scan-status alert alert-success py-2 px-3 mt-2';
            }

            showStatus(message, type) {
                if (!message) {
                    this.statusMessage.innerHTML = '';
                    return;
                }

                let alertClass = 'alert-info';
                if (type === 'error') {
                    alertClass = 'alert-danger';
                } else if (type === 'success') {
                    alertClass = 'alert-success';
                }

                this.statusMessage.innerHTML = `
                    <div class="alert ${alertClass} mb-4" role="alert">
                        ${message}
                    </div>
                `;
            }

            showLoading(show) {
                if (show) {
                    this.loadingSpinner.style.display = 'inline-block';
                    this.submitBtn.disabled = true;
                } else {
                    this.loadingSpinner.style.display = 'none';
                    this.submitBtn.disabled = false;
                }
            }

            normalizeCard(value) {
                return value.trim().replace(/[^0-9a-z]/gi, '').toUpperCase();
            }

            async registerVisitor() {
                const name = this.nameInput.value.trim();
                const purpose = this.purposeInput.value.trim();
                const rawPass = this.passInput.value.trim();

                if (!name || !purpose) {
                    this.showStatus('Please complete the form before scanning the visitor pass.', 'error');
                    return;
                }

                if (!rawPass) {
                    this.showStatus('Please scan a visitor pass to continue.', 'error');
                    this.passInput.classList.add('is-invalid');
                    this.passInput.focus();
                    return;
                }

                const normalizedPass = this.normalizeCard(rawPass);

                this.passInput.value = normalizedPass;
                this.passInput.classList.remove('is-invalid');
                this.updateScanStatus(`Pass detected: <strong>${normalizedPass}</strong>`);
                this.showStatus('', null);
                this.showLoading(true);

                try {
                    const response = await fetch('/api/kiosk/visitor/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            name,
                            purpose,
                            rfidCardUid: normalizedPass
                        })
                    });

                    const result = await response.json();

                    if (!response.ok) {
                        throw new Error(result.error || 'Failed to register visitor');
                    }

                    this.showSuccessScreen(result.data);

                } catch (error) {
                    console.error('Registration error:', error);
                    this.showLoading(false);
                    this.showStatus(error.message || 'Registration failed. Please try again.', 'error');
                }
            }

            startCountdown(seconds, callback) {
                let remaining = seconds;
                const countdownElement = document.getElementById('countdown');

                const tick = () => {
                    if (!countdownElement) {
                        return;
                    }

                    countdownElement.textContent = remaining;

                    if (remaining <= 0) {
                        callback();
                    } else {
                        remaining -= 1;
                        setTimeout(tick, 1000);
                    }
                };

                tick();
            }

            showSuccessScreen(visitorData) {
                this.showLoading(false);

                const kioskBody = document.querySelector('.kiosk-body');
                const formFooter = document.querySelector('.form-footer');

                kioskBody.innerHTML = `
                    <div class="text-center py-4">
                        <i class="fas fa-check-circle text-success" style="font-size: 4rem;"></i>
                        <h2 class="mt-3 text-success">Registration Complete!</h2>
                        <p class="lead">Welcome, ${visitorData.name}.</p>
                        <div class="card shadow-sm mt-4">
                            <div class="card-body text-start">
                                <p class="mb-2"><strong>Visitor ID:</strong> ${visitorData.id}</p>
                                <p class="mb-2"><strong>Visitor Pass:</strong> ${visitorData.rfidCardUid}</p>
                                <p class="mb-2"><strong>Purpose:</strong> ${visitorData.purpose}</p>
                                <p class="mb-0"><strong>Entry Time:</strong> ${new Date(visitorData.entryTime).toLocaleString()}</p>
                            </div>
                        </div>
                        <div class="alert alert-warning mt-4">
                            <i class="fas fa-bell me-2"></i>
                            Remember to return and scan the same visitor pass when exiting.
                        </div>
                        <div class="mt-5">
                            <div class="alert alert-info d-inline-flex align-items-center gap-2">
                                <i class="fas fa-clock"></i>
                                <span>Returning to the main menu in <strong id="countdown">7</strong> seconds...</span>
                            </div>
                        </div>
                    </div>
                `;

                formFooter.innerHTML = `
                    <button type="button" class="btn btn-primary btn-kiosk" onclick="window.location.href='/kiosk/'">
                        <i class="fas fa-home"></i> Return to Main Menu
                    </button>
                `;

                this.startCountdown(7, () => {
                    window.location.href = '/kiosk/';
                });
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            window.visitorRegistration = new VisitorRegistration();
        });
    </script>
</body>
</html>
